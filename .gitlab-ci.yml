image: tetraweb/php:7.1

stages:
  - build
  - test
  - cleanup
  - deploy

build:
  stage: build
  before_script:
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
  - "apt-get update && apt-get install zip unzip yarn -y"
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  script:
  - php composer.phar install
  - php composer.phar run-script post-root-package-install
  - php artisan key:generate
  - yarn
  - npm run production
  - rm -rf node_modules
  tags:
  - docker
  only:
  - master
  - /^feature-.*$/
  artifacts:
    paths:
    - ./
    name: "${CI_BUILD_REF_NAME}"
    expire_in: 1 hour

test:static-analysis:
  stage: test
  allow_failure: true
  script:
  - php composer.phar run-script code
  tags:
  - docker
  only:
  - master
  - /^feature-.*$/

test:unittests:
  stage: test
  script:
  - php composer.phar run-script test:unit
  tags:
  - docker
  only:
  - master
  - /^feature-.*$/

deploy:staging:
  image: ruby:2.2
  stage: deploy
  tags:
    - docker
  before_script:
    - gem install dpl
  script:
    - "echo 'web: php artisan doctrine:migrations:refresh && php artisan restart:import:businesses data/all.csv && $(composer config bin-dir)/heroku-php-apache2 public/' > ./Procfile"
    - dpl --provider=heroku --app=restartproject --api-key=$HEROKU_STAGING_API_KEY --skip-cleanup
  environment:
    name: staging
    url: https://restartproject.herokuapp.com/
  only:
    - master

cleanup:
  stage: cleanup
  script:
  - php composer.phar install --no-dev
  - rm -rf .git
  tags:
  - docker
  only:
  - master
  artifacts:
    paths:
    - ./
    name: "${CI_BUILD_REF_NAME}"
    expire_in: 1 day

deploy:staging:
  dependencies:
    - cleanup
  stage: deploy
  before_script:
    - "apt-get update && apt-get install sshpass"
  script:
    - "echo \"curl -H 'PRIVATE-TOKEN: ${GITLAB_TOKEN}' https://gitlab.outlandish.com/api/v3/projects/185/jobs/artifacts/master/download?job=build > repairmap.zip\" > deploy.sh"
    - "echo \"unzip repairmap.zip -d public_html/repairmap\" >> deploy.sh"
    - "echo \"cp -r public_html/repairmap/public public_html/public/map\" >> deploy.sh"
    - "echo \"sed -i 's|/../bootstrap/|/../../repairmap/bootstrap/|' public_html/public/map/index.php\" >> deploy.sh"
    - "echo \"public_html/repairmap/public/css public_html/public/css\" >> deploy.sh"
    - "echo \"public_html/repairmap/public/js public_html/public/js\" >> deploy.sh"
    - "cat deploy.sh | sshpass -e ssh -tt ${SSH_USERNAME}@shell.gridhost.co.uk"
    - rm deploy.sh
  tags:
    - docker
  only:
    - master
    - new-deploy-process

# deploy:production:
#   dependencies:
#   - build
#   stage: deploy
#   script:
#   - php composer.phar install --no-dev
#   - rm composer.phar
#   - rm -rf .git
#   tags:
#   - docker
#   only:
#   - tags
#   artifacts:
#     paths:
#     - ./
#     name: "${CI_BUILD_REF_NAME}"
#     expire_in: 1 week