image: tetraweb/php:7.1

stages:
  - build
  - test
  - cleanup
  - deploy

build:
  stage: build
  before_script:
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
  - "apt-get update && apt-get install zip unzip yarn -y"
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  script:
  - php composer.phar install
  - php composer.phar run-script post-root-package-install
  - php artisan key:generate
  - yarn
  - npm run production
  - rm -rf node_modules
  tags:
  - docker
  only:
  - master
  - /^feature-.*$/
  artifacts:
    paths:
    - ./
    name: "${CI_BUILD_REF_NAME}"
    expire_in: 1 hour

test:static-analysis:
  dependencies:
    - build
  stage: test
  allow_failure: true
  script:
  - php composer.phar run-script code
  tags:
  - docker
  only:
  - master
  - /^feature-.*$/

test:unittests:
  dependencies:
    - build
  stage: test
  script:
  - php composer.phar run-script test:unit
  tags:
  - docker
  only:
  - master
  - /^feature-.*$/

deploy:heroku:
  dependencies:
    - build
  image: ruby:2.2
  stage: deploy
  tags:
    - docker
  before_script:
    - gem install dpl
  script:
    - "echo 'web: php artisan doctrine:migrations:refresh && php artisan restart:import:businesses data/all.csv && $(composer config bin-dir)/heroku-php-apache2 public/' > ./Procfile"
    - dpl --provider=heroku --app=restartproject --api-key=$HEROKU_STAGING_API_KEY --skip-cleanup
  environment:
    name: staging
    url: https://restartproject.herokuapp.com/
  only:
    - master
    - feature-8-multi-select

cleanup:
  dependencies:
    - build
  stage: cleanup
  script:
  - php composer.phar install --no-dev
  - rm -rf .git
  - rm .env
  tags:
  - docker
  only:
  - master
  artifacts:
    paths:
    - ./
    name: "${CI_BUILD_REF_NAME}"
    expire_in: 1 day

#deploy:staging:
#  dependencies:
#    - cleanup
#  stage: deploy
#  before_script:
#    - "apt-get update && apt-get install sshpass"
#  script:
#    - 'sed -i "s|APP_URL=.*|APP_URL=http://community-staging.therestartproject.org|" .env'
#    - 'sed -i "s|APP_DEBUG=.*|APP_DEBUG=true|" .env'
#    - 'sed -i "s|APP_ENV=.*|APP_ENV=production|" .env'
#    - 'sed -i "s|DB_HOST=.*|DB_HOST=${}|".env'
#    - 'sed -i "s|DB_HOST=.*|DB_HOST=${}|".env'
#  tags:
#    - docker
#  only:
#    - master
#    - new-deploy-process

# deploy:production:
#   dependencies:
#   - build
#   stage: deploy
#   script:
#   - php composer.phar install --no-dev
#   - rm composer.phar
#   - rm -rf .git
#   tags:
#   - docker
#   only:
#   - tags
#   artifacts:
#     paths:
#     - ./
#     name: "${CI_BUILD_REF_NAME}"
#     expire_in: 1 week