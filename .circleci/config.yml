version: 2

dependencies:
  pre:
    - curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - sudo dpkg -i google-chrome.deb
    - sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
    - rm google-chrome.deb
jobs:
  build:
    docker:
      - image: cimg/php:8.1.12-node
        name: map.restarters.test
        environment:
          - DB_CONNECTION: mysql
          - DB_HOST: 127.0.0.1
          - DB_PORT: 3306
          - DB_DATABASE: repairdir_dev
          - DB_USERNAME: repairdir_dev
          - DB_PASSWORD: secret
      - image: circleci/mysql:5.7.36
        environment:
          # You can connect once ssh'd in using  mysql -u root -p -h 127.0.0.1
          - MYSQL_ROOT_PASSWORD: secret
          - MYSQL_DATABASE: repairdir_dev
          - MYSQL_USER: repairdir_dev
          - MYSQL_PASSWORD: secret
      - image: mcr.microsoft.com/playwright:focal
        environment:
          NODE_ENV: development
    steps:
      - checkout
      - run: sudo apt update
      - run: sudo apt install dnsutils openssl zip unzip git libxml2-dev libzip-dev zlib1g-dev libcurl4-openssl-dev iputils-ping default-mysql-client vim libpng-dev libgmp-dev libjpeg-turbo8-dev
      - run: sudo apt-get install php-xmlrpc php8.1-intl php8.1-xdebug php8.1-mbstring php8.1-simplexml php8.1-curl php8.1-zip postgresql-client php8.1-gd php8.1-xmlrpc php8.1-mysql php-mysql
      - run: sudo pecl install xdebug

      # We now need Node 14 for Playwright.
      - run: sudo curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
      - run: sudo apt update
      - run: sudo apt -y install nodejs
      - run: sudo rm /usr/local/bin/node

      - run: cp fixometer/config/config.dist.php fixometer/config/config.php
      - run: cp .env.example .env

      # Playwright needs the debug bar not to appear
      - run: sed -i 's/APP_DEBUG=.*$/APP_DEBUG=FALSE/g' .env

      # ...and runs on localhost.
      - run: sed -i 's/SESSION_DOMAIN=.*$/SESSION_DOMAIN=localhost/g' .env

      # ...and needs honeypot rate-limiting needs to be turned off.
      - run: sed -i 's/HONEYPOT_DISABLE=.*$/HONEYPOT_DISABLE=TRUE/g' .env

      # Add in private values.
      - run: sudo sed -ie "s/GOOGLE_MAPS_API_KEY=zzz/GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY/g" .env
      - run: sudo sed -ie "s/GRAVITYFORMS_KEY=zzz/GRAVITYFORMS_KEY=$GRAVITYFORMS_KEY/g" .env
      - run: sudo sed -ie "s/GRAVITYFORMS_SECRET=zzz/GRAVITYFORMS_SECRET=$GRAVITYFORMS_SECRET/g" .env
      - run: sudo sed -ie "s/GRAVITYFORMS_SUBMISSION_FORM_ID=zzz/GRAVITYFORMS_SUBMISSION_FORM_ID=$GRAVITYFORMS_SUBMISSION_FORM_ID/g" .env

      - run: wget https://getcomposer.org/composer-2.phar -O composer.phar; rm -rf vendor; echo Y | php8.1 composer.phar install
      - run: npm install
      - run: npx playwright install
      - run: npx playwright install-deps
      - run: npm install -D @playwright/test

      - run: php artisan key:generate
      - run: php artisan migrate

      - run: wget -O phpunit https://phar.phpunit.de/phpunit-7.phar ; chmod +x phpunit

      - run: export XDEBUG_MODE=coverage;./phpunit -d memory_limit=512M --bootstrap vendor/autoload.php -dxdebug.coverage_enable=1 --coverage-clover tests/clover.xml --configuration ./phpunit.xml

      # Coveralls is pernickety about the location it uploads from existing.
      - run: mkdir build; mkdir build/logs; php vendor/bin/php-coveralls -v -x tests/clover.xml

      # Run the Playwright tests.
      # TODO